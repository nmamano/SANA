pop-os.localdomain
Sun Jan 19 05:45:58 EST 2020
=== Parsed arguments ===
-combinedScoreAs: sum	-g1: RNorvegicus	-g2: CElegans	-localScoresFile: sana	-method: sana	-mode: normal	-o: regression-out/RNorvegicus-CElegans	-objfuntype: generic	-paretoThreads: 1	-qmode: normal	-schedulemethod: auto	-tdecay: auto	-tinitial: auto	-wavenodesim: nodec	-wecnodesim: graphletlgraal	
-gofrac: 1	-iterperstep: 1e+07	-lgraaliter: 1000	-maxGraphletSize: 5	-multipartite: 1	-nneighbors: 50	-ntabus: 300	-numcand: 3	-paretoCapacity: 200	-paretoInitial: 1	-paretoIterations: 10000	-qcount: 1	-s3: 1	-t: 5	-tcand: 1	-tfin: 3	-tnew: 3	

-edgecweights: 0.1 0.25 0.5 0.15 
-esim: 
-goweights: 1 
-nodecweights: 0.1 0.25 0.5 0.15 
-simFormat: 
Seed: 1587777563
Initializing graphs...
Loading graphs using Graph::loadGraph()
Graph loading completed in 0.019s
Setting maximum graphlet size to 5
Locking initialization done (0.000s)
Total time for loading graphs (0.019s)
Initializing measures... done (0.008s)
=== optimize: ===
weight s3: 1


Computing TInitial via method linear-regression-vintage
Finding Upper Bound of the Temperature ... 
> getPBad(1) = 0.999995 (score: 0.000259673) (time: 0.082s)
> getPBad(0.1) = 0.999948 (score: 0) (time: 0.067s)
Finding Lower Bound of the Temperature ... 
> getPBad(0.01) = 0.999138 (score: 0.000507228) (time: 0.034s)
> getPBad(0.001) = 0.976062 (score: 0.00635647) (time: 0.042s)
> getPBad(0.0001) = 0.592352 (score: 0.0300257) (time: 0.067s)
> getPBad(1e-05) = 5.28069e-06 (score: 0.285714) (time: 1.167s)
> getPBad(1e-06) = 1.94449e-42 (score: 0.259082) (didn't detect eq. after 2s)
HIGH TEMP = 0.1 LOW TEMP = 1e-05
NUM OF STEPS = 1e+06
Sampling 7 pBads from 1e-05 to 0.1 for linear regression
> getPBad(1e-05) = 3.67334e-05 (score: 0.218911) (time: 1.217s)
> getPBad(4.64159e-05) = 0.0706815 (score: 0.144689) (time: 0.216s)
> getPBad(0.000215443) = 0.935359 (score: 0.00525348) (time: 0.049s)
> getPBad(0.001) = 0.972064 (score: 0.00955161) (time: 0.05s)
> getPBad(0.00464159) = 0.998795 (score: 0.000532907) (time: 0.04s)
> getPBad(0.0215443) = 0.999774 (score: 0.000243427) (time: 0.053s)
> getPBad(0.1) = 0.999943 (score: 0.00079639) (time: 0.066s)
Increasing sample density near TFinal.  range: (2.15443e-06, 1e-05)
> getPBad(4.64159e-06) = 8.96088e-11 (score: 0.250991) (time: 1.689s)
> getPBad(6.81292e-06) = 6.39028e-05 (score: 0.252005) (time: 1.118s)
> getPBad(5.62341e-06) = 2.50942e-06 (score: 0.265557) (time: 1.678s)
> getPBad(5.10897e-06) = 7.72915e-10 (score: 0.261905) (time: 1.354s)
Increasing sample density near TInitial. range: (0.001, 0.00464159)
> getPBad(0.00215443) = 0.976209 (score: 0.01346) (time: 0.07s)
> getPBad(0.00316228) = 0.997929 (score: 0) (time: 0.061s)
> getPBad(0.00261016) = 0.997565 (score: 0.00179211) (time: 0.045s)
> getPBad(0.00237137) = 0.997934 (score: 0.000529381) (time: 0.09s)
Hill Climb range: (temp 0.000004641589 pBad 0.000000000090) to (temp 0.000046415888 pBad 0.011797449237) [5 samples in this range]
Goldilocks range: (temp 0.000046415888 pBad 0.011797449237) to (temp 0.000215443469 pBad 0.986174620668) [2 samples in this range]
Random sol range: (temp 0.000215443469 pBad 0.986174620668) to (temp 0.100000000000 pBad 0.999943364667) [8 samples in this range]
Computed TInitial 0.00237137 in 11.366s

Computing TFinal via method linear-regression-vintage
Computed TFinal 4.64159e-06 in 0s
TInitial found in 11.366s for target pBad 0.99: 
> getPBad(0.00237137) = 0.997553 (score: 0.00179441) (time: 0.072s)
TFinal found in 0s for target pBad 1e-10: 
> getPBad(4.64159e-06) = 1.29554e-10 (score: 0.247714) (time: 1.466s)
TDecay needed to traverse this range: 6.23617

Start execution of SANA_s3
usingIterations = 0
Determining iteration speed....
0 (inf%,0.389s): score = 0.19278 ips = 2.57069e+06, P(0) = 0, pBad = 0
SANA does 2557544.757033 iterations per second (took 0.391s doing 1000000 iterations)
0 (0%,0s): score = 0.000750375 ips = inf, P(0.00237137) = 0.995792, pBad = -nan
1 (1.30333%,4.096s): score = 0.000259538 ips = 2.44141e+06, P(0.00218626) = 0.995436, pBad = 0.997584
2 (2.60667%,8.175s): score = 0.000515863 ips = 2.45158e+06, P(0.00201559) = 0.995051, pBad = 0.997282
3 (3.91%,12.338s): score = 0.000530926 ips = 2.40211e+06, P(0.00185825) = 0.994633, pBad = 0.997309
4 (5.21333%,16.533s): score = 0.00099975 ips = 2.38379e+06, P(0.00171319) = 0.99418, pBad = 0.996104
5 (6.51667%,20.791s): score = 0.000272035 ips = 2.34852e+06, P(0.00157945) = 0.993689, pBad = 0.996273
6 (7.82%,25.026s): score = 0.0163307 ips = 2.36128e+06, P(0.00145616) = 0.993156, pBad = 0.967532
7 (9.12333%,29.549s): score = 0.0148428 ips = 2.21092e+06, P(0.00134249) = 0.992579, pBad = 0.965824
8 (10.4267%,33.964s): score = 0.000514271 ips = 2.26501e+06, P(0.00123769) = 0.991953, pBad = 0.995728
9 (11.73%,38.332s): score = 0.0156331 ips = 2.28938e+06, P(0.00114107) = 0.991275, pBad = 0.958916
10 (13.0333%,42.921s): score = 0.0177679 ips = 2.17912e+06, P(0.001052) = 0.990539, pBad = 0.956192
11 (14.3367%,47.588s): score = 0.0156794 ips = 2.1427e+06, P(0.000969874) = 0.989742, pBad = 0.95333
12 (15.64%,51.892s): score = 0.0145482 ips = 2.32342e+06, P(0.000894163) = 0.988879, pBad = 0.949819
13 (16.9433%,56.303s): score = 0.016958 ips = 2.26706e+06, P(0.000824362) = 0.987943, pBad = 0.944788
14 (18.2467%,60.784s): score = 0.0171896 ips = 2.23164e+06, P(0.00076001) = 0.986928, pBad = 0.938357
15 (19.55%,65.3s): score = 0.0151081 ips = 2.21435e+06, P(0.000700682) = 0.98583, pBad = 0.933757
16 (20.8533%,69.812s): score = 0.0140249 ips = 2.21631e+06, P(0.000645985) = 0.984639, pBad = 0.931381
17 (22.1567%,74.521s): score = 0.0178104 ips = 2.12359e+06, P(0.000595557) = 0.983349, pBad = 0.922608
18 (23.46%,79.166s): score = 0.0184196 ips = 2.15285e+06, P(0.000549067) = 0.981952, pBad = 0.914138
19 (24.7633%,83.953s): score = 0.0159103 ips = 2.08899e+06, P(0.000506205) = 0.980439, pBad = 0.909532
20 (26.0667%,88.606s): score = 0.0174497 ips = 2.14915e+06, P(0.000466689) = 0.9788, pBad = 0.898075
21 (27.37%,93.279s): score = 0.0198589 ips = 2.13995e+06, P(0.000430258) = 0.977026, pBad = 0.888254
22 (28.6733%,97.918s): score = 0.01936 ips = 2.15564e+06, P(0.000396671) = 0.975105, pBad = 0.874325
23 (29.9767%,102.58s): score = 0.019564 ips = 2.145e+06, P(0.000365706) = 0.973026, pBad = 0.870269
24 (31.28%,107.01s): score = 0.0255532 ips = 2.25734e+06, P(0.000337158) = 0.970776, pBad = 0.833718
25 (32.5833%,111.995s): score = 0.0245967 ips = 2.00602e+06, P(0.000310838) = 0.968341, pBad = 0.820113
26 (33.8867%,116.568s): score = 0.0255485 ips = 2.18675e+06, P(0.000286574) = 0.965707, pBad = 0.809136
27 (35.19%,121.166s): score = 0.0272702 ips = 2.17486e+06, P(0.000264203) = 0.962858, pBad = 0.779868
28 (36.4933%,125.717s): score = 0.031136 ips = 2.19732e+06, P(0.000243578) = 0.959777, pBad = 0.762607
29 (37.7967%,130.232s): score = 0.0288839 ips = 2.21484e+06, P(0.000224564) = 0.956446, pBad = 0.740433
30 (39.1%,134.241s): score = 0.0372326 ips = 2.49439e+06, P(0.000207034) = 0.952847, pBad = 0.706564
31 (40.4033%,138.005s): score = 0.0385396 ips = 2.65675e+06, P(0.000190872) = 0.948958, pBad = 0.662493
32 (41.7067%,141.543s): score = 0.0446064 ips = 2.82646e+06, P(0.000175972) = 0.944757, pBad = 0.615055
33 (43.01%,144.745s): score = 0.0550406 ips = 3.12305e+06, P(0.000162235) = 0.940222, pBad = 0.564454
34 (44.3133%,147.949s): score = 0.0567503 ips = 3.1211e+06, P(0.000149571) = 0.935328, pBad = 0.52561
35 (45.6167%,151.213s): score = 0.0625191 ips = 3.06373e+06, P(0.000137895) = 0.930048, pBad = 0.473717
36 (46.92%,154.505s): score = 0.0689007 ips = 3.03767e+06, P(0.000127131) = 0.924355, pBad = 0.420205
37 (48.2233%,157.8s): score = 0.088694 ips = 3.0349e+06, P(0.000117206) = 0.918219, pBad = 0.351478
38 (49.5267%,161.073s): score = 0.101227 ips = 3.0553e+06, P(0.000108057) = 0.911609, pBad = 0.302688
39 (50.83%,164.321s): score = 0.118048 ips = 3.07882e+06, P(9.96218e-05) = 0.904494, pBad = 0.248502
40 (52.1333%,167.653s): score = 0.134588 ips = 3.0012e+06, P(9.1845e-05) = 0.896839, pBad = 0.195383
41 (53.4367%,171.121s): score = 0.162842 ips = 2.88351e+06, P(8.46753e-05) = 0.888609, pBad = 0.144064
42 (54.74%,174.306s): score = 0.197881 ips = 3.13972e+06, P(7.80654e-05) = 0.879767, pBad = 0.0931069
43 (56.0433%,177.419s): score = 0.227237 ips = 3.21234e+06, P(7.19714e-05) = 0.870277, pBad = 0.0605131
44 (57.3467%,180.498s): score = 0.256238 ips = 3.24781e+06, P(6.63531e-05) = 0.860098, pBad = 0.041105
45 (58.65%,183.622s): score = 0.291215 ips = 3.20102e+06, P(6.11734e-05) = 0.849192, pBad = 0.0237892
46 (59.9533%,186.732s): score = 0.327942 ips = 3.21543e+06, P(5.6398e-05) = 0.837519, pBad = 0.0133998
47 (61.2567%,189.871s): score = 0.360081 ips = 3.18573e+06, P(5.19954e-05) = 0.825039, pBad = 0.00717267
48 (62.56%,192.948s): score = 0.377924 ips = 3.24992e+06, P(4.79365e-05) = 0.811712, pBad = 0.00408712
49 (63.8633%,196.043s): score = 0.402726 ips = 3.23102e+06, P(4.41945e-05) = 0.797501, pBad = 0.0021752
50 (65.1667%,199.259s): score = 0.417079 ips = 3.10945e+06, P(4.07445e-05) = 0.782367, pBad = 0.00123391
51 (66.47%,202.288s): score = 0.42438 ips = 3.30142e+06, P(3.75639e-05) = 0.766276, pBad = 0.000774502
52 (67.7733%,205.399s): score = 0.435537 ips = 3.2144e+06, P(3.46316e-05) = 0.749197, pBad = 0.000470956
Select an option (0 - 3):
  (0) Do nothing and continue
  (1) Exit
  (2) Save Alignment and Exit
  (3) Save Alignment and Continue
>> 