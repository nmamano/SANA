pop-os.localdomain
Sun Jan 19 05:45:58 EST 2020
=== Parsed arguments ===
-combinedScoreAs: sum	-g1: RNorvegicus	-g2: SPombe	-localScoresFile: sana	-method: sana	-mode: normal	-o: regression-out/RNorvegicus-SPombe	-objfuntype: generic	-paretoThreads: 1	-qmode: normal	-schedulemethod: auto	-tdecay: auto	-tinitial: auto	-wavenodesim: nodec	-wecnodesim: graphletlgraal	
-gofrac: 1	-iterperstep: 1e+07	-lgraaliter: 1000	-maxGraphletSize: 5	-multipartite: 1	-nneighbors: 50	-ntabus: 300	-numcand: 3	-paretoCapacity: 200	-paretoInitial: 1	-paretoIterations: 10000	-qcount: 1	-s3: 1	-t: 5	-tcand: 1	-tfin: 3	-tnew: 3	

-edgecweights: 0.1 0.25 0.5 0.15 
-esim: 
-goweights: 1 
-nodecweights: 0.1 0.25 0.5 0.15 
-simFormat: 
Seed: 1587777564
Initializing graphs...
Loading graphs using Graph::loadGraph()
Graph loading completed in 0.016s
Setting maximum graphlet size to 5
Locking initialization done (0.000s)
Total time for loading graphs (0.016s)
Initializing measures... done (0.008s)
=== optimize: ===
weight s3: 1


Computing TInitial via method linear-regression-vintage
Finding Upper Bound of the Temperature ... 
> getPBad(1) = 0.999982 (score: 0.000527704) (time: 0.027s)
> getPBad(10) = 0.999998 (score: 0.000168095) (time: 0.028s)
Finding Lower Bound of the Temperature ... 
> getPBad(0.1) = 0.999844 (score: 0.000846167) (time: 0.056s)
> getPBad(0.01) = 0.998294 (score: 0.00104312) (time: 0.029s)
> getPBad(0.001) = 0.967978 (score: 0.00718943) (time: 0.031s)
> getPBad(0.0001) = 0.173644 (score: 0.0743757) (time: 0.11s)
> getPBad(1e-05) = 2.34181e-05 (score: 0.32) (time: 1.198s)
> getPBad(1e-06) = 1.04804e-09 (score: 0.343622) (time: 1.571s)
> getPBad(1e-07) = 0 (score: 0.337653) (time: 1.105s)
HIGH TEMP = 1 LOW TEMP = 1e-06
NUM OF STEPS = 1e+06
Sampling 7 pBads from 1e-06 to 1 for linear regression
> getPBad(1e-06) = 2.43291e-06 (score: 0.329996) (time: 1.488s)
> getPBad(1e-05) = 7.449e-05 (score: 0.32414) (time: 1.138s)
> getPBad(0.0001) = 0.419818 (score: 0.0232417) (time: 0.047s)
> getPBad(0.001) = 0.976217 (score: 0.00424668) (time: 0.035s)
> getPBad(0.01) = 0.998002 (score: 0.00102215) (time: 0.038s)
> getPBad(0.1) = 0.999806 (score: 0.000686577) (time: 0.035s)
> getPBad(1) = 0.999983 (score: 0.000354045) (time: 0.038s)
Increasing sample density near TFinal.  range: (1e-07, 1e-06)
> getPBad(3.16228e-07) = 1.06088e-165 (score: 0.330219) (time: 1.755s)
> getPBad(5.62341e-07) = 8.15821e-39 (score: 0.280103) (time: 1.78s)
> getPBad(7.49894e-07) = 8.01447e-27 (score: 0.298716) (time: 1.146s)
> getPBad(8.65964e-07) = 9.59065e-08 (score: 0.327851) (time: 1.769s)
Increasing sample density near TInitial. range: (0.001, 0.01)
> getPBad(0.00316228) = 0.993466 (score: 0.00186094) (time: 0.059s)
> getPBad(0.00177828) = 0.949339 (score: 0.0229701) (time: 0.048s)
> getPBad(0.00237137) = 0.990005 (score: 0.0104676) (time: 0.032s)
> getPBad(0.00205353) = 0.988123 (score: 0.000171556) (time: 0.035s)
Hill Climb range: (temp 0.000000316228 pBad 0.000000000000) to (temp 0.000010000000 pBad 0.000012836477) [5 samples in this range]
Goldilocks range: (temp 0.000010000000 pBad 0.000012836477) to (temp 0.001000000000 pBad 0.986867707437) [3 samples in this range]
Random sol range: (temp 0.001000000000 pBad 0.986867707437) to (temp 1.000000000000 pBad 0.999983431268) [7 samples in this range]
Computed TInitial 0.00237137 in 13.674s

Computing TFinal via method linear-regression-vintage
Computed TFinal 7.49894e-07 in 0s
TInitial found in 13.674s for target pBad 0.99: 
> getPBad(0.00237137) = 0.992428 (score: 0.00183762) (time: 0.033s)
TFinal found in 0s for target pBad 1e-10: 
> getPBad(7.49894e-07) = 1.52827e-23 (score: 0.302888) (time: 1.616s)
TDecay needed to traverse this range: 8.05905

Start execution of SANA_s3
usingIterations = 0
Determining iteration speed....
0 (inf%,0.338s): score = 0.297268 ips = 2.95857e+06, P(0) = 0, pBad = 0
SANA does 2949852.507375 iterations per second (took 0.339s doing 1000000 iterations)
0 (0%,0s): score = 0.00084076 ips = inf, P(0.00237137) = 0.995792, pBad = -nan
1 (1.13%,3.669s): score = 0.0227312 ips = 2.72554e+06, P(0.00216496) = 0.995392, pBad = 0.949365
2 (2.26%,7.378s): score = 0.00444444 ips = 2.69614e+06, P(0.00197651) = 0.994953, pBad = 0.989004
3 (3.39%,11.112s): score = 0.0223791 ips = 2.67809e+06, P(0.00180447) = 0.994474, pBad = 0.942272
4 (4.52%,14.792s): score = 0.0243404 ips = 2.71739e+06, P(0.0016474) = 0.993948, pBad = 0.933891
5 (5.65%,18.611s): score = 0.0243043 ips = 2.61849e+06, P(0.00150401) = 0.993373, pBad = 0.933014
6 (6.78%,22.321s): score = 0.0261731 ips = 2.69542e+06, P(0.00137309) = 0.992744, pBad = 0.924478
7 (7.91%,26.34s): score = 0.0239092 ips = 2.48818e+06, P(0.00125357) = 0.992055, pBad = 0.918319
8 (9.04%,30.305s): score = 0.024835 ips = 2.52207e+06, P(0.00114446) = 0.9913, pBad = 0.911492
9 (10.17%,34.381s): score = 0.0283839 ips = 2.45339e+06, P(0.00104484) = 0.990475, pBad = 0.90212
10 (11.3%,38.255s): score = 0.0247206 ips = 2.58131e+06, P(0.000953894) = 0.989571, pBad = 0.894937
11 (12.43%,42.308s): score = 0.0267195 ips = 2.46731e+06, P(0.000870863) = 0.988583, pBad = 0.884539
12 (13.56%,46.262s): score = 0.025628 ips = 2.52908e+06, P(0.00079506) = 0.987501, pBad = 0.875857
13 (14.69%,50.067s): score = 0.0261771 ips = 2.62812e+06, P(0.000725855) = 0.986318, pBad = 0.86623
14 (15.82%,54.007s): score = 0.0249385 ips = 2.53807e+06, P(0.000662674) = 0.985023, pBad = 0.843604
15 (16.95%,58.181s): score = 0.0258832 ips = 2.39578e+06, P(0.000604993) = 0.983607, pBad = 0.83925
16 (18.08%,62.219s): score = 0.0259968 ips = 2.47647e+06, P(0.000552332) = 0.982058, pBad = 0.823731
17 (19.21%,66.316s): score = 0.03125 ips = 2.44081e+06, P(0.000504255) = 0.980364, pBad = 0.783246
18 (20.34%,70.401s): score = 0.0327808 ips = 2.44798e+06, P(0.000460363) = 0.978512, pBad = 0.757328
19 (21.47%,74.55s): score = 0.0393039 ips = 2.41022e+06, P(0.000420291) = 0.976488, pBad = 0.740848
20 (22.6%,78.699s): score = 0.0352853 ips = 2.41022e+06, P(0.000383707) = 0.974275, pBad = 0.718242
21 (23.73%,82.857s): score = 0.0448394 ips = 2.405e+06, P(0.000350308) = 0.971857, pBad = 0.684691
22 (24.86%,87.069s): score = 0.0369318 ips = 2.37417e+06, P(0.000319816) = 0.969216, pBad = 0.658025
23 (25.99%,91.142s): score = 0.0483347 ips = 2.45519e+06, P(0.000291978) = 0.966331, pBad = 0.632772
24 (27.12%,95.236s): score = 0.0435487 ips = 2.4426e+06, P(0.000266563) = 0.96318, pBad = 0.575415
25 (28.25%,99.275s): score = 0.0431626 ips = 2.47586e+06, P(0.00024336) = 0.959741, pBad = 0.557241
26 (29.38%,103.258s): score = 0.0543124 ips = 2.51067e+06, P(0.000222177) = 0.955989, pBad = 0.496891
27 (30.51%,107.541s): score = 0.0492801 ips = 2.33481e+06, P(0.000202838) = 0.951895, pBad = 0.471798
28 (31.64%,111.803s): score = 0.0598802 ips = 2.34632e+06, P(0.000185183) = 0.947431, pBad = 0.428418
29 (32.77%,115.877s): score = 0.0684962 ips = 2.45459e+06, P(0.000169064) = 0.942566, pBad = 0.351676
30 (33.9%,120.037s): score = 0.0778878 ips = 2.40385e+06, P(0.000154348) = 0.937265, pBad = 0.312226
31 (35.03%,124.165s): score = 0.0917112 ips = 2.42248e+06, P(0.000140913) = 0.931494, pBad = 0.246076
32 (36.16%,128.224s): score = 0.100216 ips = 2.46366e+06, P(0.000128647) = 0.925212, pBad = 0.188985
33 (37.29%,131.855s): score = 0.122604 ips = 2.75406e+06, P(0.000117449) = 0.918381, pBad = 0.132107
34 (38.42%,135.292s): score = 0.142935 ips = 2.90951e+06, P(0.000107226) = 0.910956, pBad = 0.0982184
35 (39.55%,138.562s): score = 0.169697 ips = 3.0581e+06, P(9.78926e-05) = 0.902892, pBad = 0.060078
36 (40.68%,141.539s): score = 0.20282 ips = 3.35909e+06, P(8.93717e-05) = 0.894141, pBad = 0.0354605
37 (41.81%,144.526s): score = 0.249131 ips = 3.34784e+06, P(8.15925e-05) = 0.884653, pBad = 0.0173659
38 (42.94%,147.518s): score = 0.309492 ips = 3.34225e+06, P(7.44903e-05) = 0.874375, pBad = 0.00667108
39 (44.07%,150.514s): score = 0.339267 ips = 3.33778e+06, P(6.80064e-05) = 0.863255, pBad = 0.00378287
40 (45.2%,153.517s): score = 0.390156 ips = 3.33e+06, P(6.20869e-05) = 0.851237, pBad = 0.00114153
41 (46.33%,156.561s): score = 0.417712 ips = 3.28515e+06, P(5.66826e-05) = 0.838265, pBad = 0.000507555
42 (47.46%,159.57s): score = 0.438695 ips = 3.32336e+06, P(5.17488e-05) = 0.824283, pBad = 0.000403007
43 (48.59%,162.591s): score = 0.454407 ips = 3.31016e+06, P(4.72444e-05) = 0.809235, pBad = 9.59348e-05
44 (49.72%,165.672s): score = 0.46239 ips = 3.2457e+06, P(4.3132e-05) = 0.793068, pBad = 0.000118445
45 (50.85%,168.843s): score = 0.467562 ips = 3.15358e+06, P(3.93777e-05) = 0.77573, pBad = 6.02949e-05
46 (51.98%,171.808s): score = 0.470227 ips = 3.37268e+06, P(3.59501e-05) = 0.757173, pBad = 2.73022e-05
47 (53.11%,174.718s): score = 0.471654 ips = 3.43643e+06, P(3.28209e-05) = 0.737356, pBad = 1.66409e-05
48 (54.24%,177.66s): score = 0.473603 ips = 3.39905e+06, P(2.9964e-05) = 0.716245, pBad = 1.19629e-05
49 (55.37%,180.616s): score = 0.474779 ips = 3.38295e+06, P(2.73558e-05) = 0.693813, pBad = 6.60454e-06
50 (56.5%,183.542s): score = 0.476852 ips = 3.41763e+06, P(2.49747e-05) = 0.670048, pBad = 3.55509e-06
51 (57.63%,186.483s): score = 0.477054 ips = 3.4002e+06, P(2.28008e-05) = 0.644951, pBad = 1.98076e-06
52 (58.76%,189.394s): score = 0.47806 ips = 3.43525e+06, P(2.08161e-05) = 0.618538, pBad = 9.79137e-07
53 (59.89%,192.276s): score = 0.478462 ips = 3.46981e+06, P(1.90042e-05) = 0.590847, pBad = 3.84833e-07
54 (61.02%,195.218s): score = 0.478462 ips = 3.39905e+06, P(1.735e-05) = 0.561936, pBad = 1.59526e-07
55 (62.15%,198.137s): score = 0.478445 ips = 3.42583e+06, P(1.58398e-05) = 0.531889, pBad = 7.83811e-08
56 (63.28%,200.999s): score = 0.478662 ips = 3.49406e+06, P(1.44611e-05) = 0.500818, pBad = 2.48405e-08
57 (64.41%,203.918s): score = 0.479231 ips = 3.42583e+06, P(1.32023e-05) = 0.468864, pBad = 6.8252e-09
Select an option (0 - 3):
  (0) Do nothing and continue
  (1) Exit
  (2) Save Alignment and Exit
  (3) Save Alignment and Continue
>> 