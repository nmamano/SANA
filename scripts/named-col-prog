#!/bin/sh
# Input: a file with a constant number of columns.  The first line contains the names of the columns.
# First arg is an awk program that is run on each line, and you can use the names defined in the top line of the input file.
# File is allowed to contain comments as hashes, they will be ignored
# Any filename after the first will be parsed later using the setup of the first.

die() { echo "$@" >&2; exit 1
}

newlines() { awk '{for(i=1; i<=NF; i++) print $i}' "$@"
}

FIELD_SEP='	'
QUIET=0
PROG=''
VERBOSE=0
HEADER=0
while [ $# -gt 0 ]; do
    case "$1" in
    -P) PROG="$PROG;"`cat "$2" | sed 's/ and / \&\& /g'`; shift 2;;
    -F) FIELD_SEP="$2"; shift 2;;
    -functions) FUNC="$2"; shift 2;;
    -q) QUIET=1; shift ;;
    -v) VERBOSE=1; shift ;;
    -h) HEADER=1; shift ;;
    -*) die "unknown option '$1'" ;;
    *) [ -e "$1" ] && break; # assume first filename (or named pipe or whatever) ends all programs
	PROG="$PROG"`echo "$1" | sed 's/ and / \&\& /g'`; shift ;;
    esac
done

TMPDIR=/tmp/named-col-prog.$$
trap "/bin/rm -rf $TMPDIR; exit" 0 1 2 3 15
mkdir $TMPDIR
argi=0
touch $TMPDIR/ASSIGN $TMPDIR/VARCOLS
for i
do
    argi=`expr $argi + 1`
    # Automatically create awk code to assign the appropriate variables from the header
    (echo "if(ARGIND==$argi){"; head -1 "$i" | sed "s/$FIELD_SEP/ /g" | newlines | tr '$%' 'DP' | sed -e 's/[^_A-Za-z0-9]/_/g' | tee $TMPDIR/varNames.$argi | awk '{printf "%s=$%d\n", $1,NR}' | sed 's/^\([0-9]\)/_\1/'; echo '}') >> $TMPDIR/ASSIGN
    (echo "if(ARGIND==$argi){"; cat $TMPDIR/varNames.$argi | awk '{printf "colName[%d]=\"%s\";varCol[\"%s\"]=%d\n",NR,$1,$1,NR}'; echo '}') >> $TMPDIR/VARCOLS
done
if [ "$VERBOSE" -eq 1 ]; then
    cat "$TMPDIR/ASSIGN" >&2
    cat "$TMPDIR/VARCOLS" >&2
fi

awk -F "$FIELD_SEP" "`cat $HOME/bin/misc.awk`${FUNC}"'
    BEGINFILE{'"`cat $TMPDIR/VARCOLS`"'}
    /^#/&&!_namedColProgStarted[ARGIND]{print "FATAL ERROR: No comments allowed in data file before the header" > "/dev/stderr"; exit(1)}
    /^[^#]/{_namedColProgStarted[ARGIND]=1}
    # never mind, do not remove comments: {gsub("#.*","")} # remove comments
    /^$/{next}
    _namedColProgStarted[ARGIND]&&!seenHeader[ARGIND]{NumCols[ARGIND]=NF;seenHeader[ARGIND]=1;if('"$HEADER"')print;next}
    NF!=NumCols[ARGIND]&&'$QUIET'==0{printf "named-col-prog: warning: expected %d columns at %s:%d but found %d\n", NumCols[ARGIND], FILENAME, FNR, NF > "/dev/stderr";if('$VERBOSE')print > "/dev/stderr"}
    !_namedColProgStarted[ARGIND]{next}
    {'"`cat $TMPDIR/ASSIGN`"'}
    '"$PROG" "$@"
