#!/usr/bin/bash
set -e

ErrorMargin="0.05"
OutputDir="regression_out"

abs(){
    [ `echo "$1 < 0" | bc -l` -eq 1 ] && echo "-1 * $1" | bc || echo $1
}

if [[ ! $# -eq 1 ]]; then
    echo "Please pass one input into the bash script"
    exit 1
fi

if [[ ! -d "$OutputDir" ]]; then
    mkdir $OutputDir
fi

echo "Making current SANA"
make clean &> /dev/null
if ! make clean all&> /dev/null; then
    echo "Make failed for current SANA"
    exit 1
fi

echo "Making base SANA"
if ! make -C $1 clean all &> /dev/null; then
    echo "Make failed for base SANA"
    exit 1
fi

Networks_nodes=""
for network in `ls ./networks | grep "^[A-Z][A-Z]"`;do
    Networks_nodes=$Networks_nodes${network}" ""`head ./networks/${network}/${network}.gw | sed -n 5p`""\n"
done
Biogrid_network=`echo -e $Networks_nodes | sort -k2 -n | awk '{print $1}'`

Networks_count=`echo $Biogrid_network | wc -w`

for i in $(seq 1 $Networks_count);do
    for j in $(seq $((i + 1)) $Networks_count); do
        Network1=`echo -e $Biogrid_network | awk '{print $'$i'}'`
        Network2=`echo -e $Biogrid_network | awk '{print $'$j'}'`
        echo "Running $Network1-$Network2"
        $1/sana -g1 $Network1 -g2 $Network2 -o "$OutputDir/$Network1-$Network2-base" &> "$OutputDir/$Network1-$Network2-base.progress"
        ./sana -g1 $Network1 -g2 $Network2 -o "$OutputDir/$Network1-$Network2-current" &> "$OutputDir/$Network1-$Network2-current.progress"
    done
done

baseIterations=""
currentIterations=""
echo "Checking Iterations Speed"
printf "%-30s | %-20s | %-20s\n" "Networks Pair" "Base Speed" "Current Speed"
for i in $(seq 1 $Networks_count);do
    for j in $(seq $((i + 1)) $Networks_count); do
        Network1=`echo -e $Biogrid_network | awk '{print $'$i'}'`
        Network2=`echo -e $Biogrid_network | awk '{print $'$j'}'`
        base_progress="$OutputDir/$Network1-$Network2-base.progress"
        current_progress="$OutputDir/$Network1-$Network2-current.progress"
        bIt=`grep -o "[0-9]*.[0-9]* iterations" ./$base_progress | awk '{print $1}'`
        cIt=`grep -o "[0-9]*.[0-9]* iterations" ./$current_progress | awk '{print $1}'`
        baseIterations=$baseIterations" "$bIt
        currentIterations=$currentIterations" "$cIt
        printf "%-30s | %-20s | %-20s\n" "$Network1-$Network2" "$bIt" "$cIt"
    done
done

baseIterationsAvg=`echo $baseIterations | tr " " "\n" | awk '{s+=$1}END{print s/NR}'`
currentIterationsAvg=`echo $currentIterations | tr " " "\n" | awk '{s+=$1}END{print s/NR}'`
baseIterationsAvg=`printf "%f" $baseIterationsAvg`
currentIterationsAvg=`printf "%f" $currentIterationsAvg`
errorDif=`echo "($baseIterationsAvg - $currentIterationsAvg)/$baseIterationsAvg" | bc -l`
errorDif=`abs $errorDif`
printf "Base Iterations Average: %s | Current Iterations Average: %s | Base Relative Difference: %s\n" "$baseIterationsAvg" "$currentIterationsAvg" "$errorDif"
if [[ `echo "$errorDif < $ErrorMargin" | bc -l` -eq 0 ]]; then
    echo "Iterations Failed"
    exit 1
fi
